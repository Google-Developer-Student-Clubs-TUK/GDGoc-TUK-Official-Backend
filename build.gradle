plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.1'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'com.google.cloud.tools.jib' version '3.4.0'
}

group = 'gdgoc.tuk'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    runtimeOnly 'com.mysql:mysql-connector-j'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    //Swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.5'

    // Spring Data Redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // Lombok
    compileOnly 'org.projectlombok:lombok:1.18.36'
    annotationProcessor 'org.projectlombok:lombok:1.18.36'
    testCompileOnly 'org.projectlombok:lombok:1.18.36'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.36'

    // Google Spread Sheet API
    implementation 'com.google.api-client:google-api-client:2.0.0'
    implementation 'com.google.oauth-client:google-oauth-client-jetty:1.34.1'
    implementation 'com.google.apis:google-api-services-sheets:v4-rev20220927-2.0.0'
    implementation 'com.google.apis:google-api-services-drive:v3-rev20220815-2.0.0'

    // Google auth library
    implementation platform('com.google.auth:google-auth-library-bom:1.30.1')
    implementation 'com.google.auth:google-auth-library-oauth2-http'

    //Gmail API
    implementation 'org.springframework.boot:spring-boot-starter-mail'

    //Redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    //Validation
    implementation("org.springframework.boot:spring-boot-starter-validation")

    // Query DSL
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // Data Faker
    implementation 'net.datafaker:datafaker:2.4.3'

    // h2
    runtimeOnly 'com.h2database:h2'

    // Spring Actuator & Prometheus
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: '3.1.6'
    runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
}

jib {
    from {
        image = 'eclipse-temurin:17-jdk-alpine'
    }
    to {
        image = 'gdgoctuk/gdgoctuk-backend'
        tags = ['latest']
        auth {
            username = project.findProperty('DOCKER_HUB_USERNAME')
            password = project.findProperty('DOCKER_HUB_PASSWORD')
        }
    }
    container {
        environment = [
                'SPRING_PROFILES_ACTIVE': 'production'
        ]
        jvmFlags = ['-Duser.timezone=Asia/Seoul']
        ports = ['8080']
        creationTime = 'USE_CURRENT_TIMESTAMP'
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
